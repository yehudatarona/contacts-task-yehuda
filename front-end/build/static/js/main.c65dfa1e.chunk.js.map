{"version":3,"sources":["contacts_comps/contactsList.js","contacts_comps/darkBox.js","services/apiService.js","logo.svg","contacts_comps/newContact.js","contacts_comps/totalContacts.js","contacts_comps/nav.js","contacts_comps/appCotacts.js","App.js","serviceWorker.js","index.js"],"names":["ContactsList","props","useState","darkState","setDarkState","contacts_ar","setContactsArr","counterApi","setCounterApi","singleItem","setSingleItem","useEffect","document","getElementById","className","url","apiUrl","doApiGet","then","data","console","log","delcontact","_id","a","global","confirm","doApiPost","del","message","alert","id","item","map","i","key","first_name","last_name","email","area_code","phone","onClick","DarkBox","innerHTML","onSubmit","event","preventDefault","target","id_phone","value","length","substring","bodyData","id_email","id_code","nModified","type","placeholder","defaultValue","_url","fetch","resp","json","_body","method","body","JSON","stringify","headers","module","exports","NewContact","history","useHistory","phoneInput","push","to","TotalContacts","total","setTotal","doucuments","Nav","AppContacts","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"qMA0FeA,IArFf,SAAsBC,GAAQ,IAAD,EACKC,mBAAS,UADd,mBACtBC,EADsB,KACXC,EADW,OAESF,mBAAS,IAFlB,mBAEtBG,EAFsB,KAETC,EAFS,OAGOJ,mBAAS,GAHhB,mBAGtBK,EAHsB,KAGVC,EAHU,OAION,mBAAS,IAJhB,mBAItBO,EAJsB,KAIVC,EAJU,KAM3BC,qBAAU,WACRC,SAASC,eAAe,WAAWC,UAAYX,IAE9C,CAACA,IAEJQ,qBAAU,WACR,IAAII,EAAMC,IAAS,QACnBC,YAASF,GACNG,MAAK,SAAAC,GACJC,QAAQC,IAAI,eAAgBF,GAC5Bb,EAAea,QAElB,CAACZ,IAEJ,IAAMe,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,0DACAC,EAAOC,QAAQ,oCADf,uBAGXX,EAAMC,IAAS,YAHJ,SAIEW,YAAUZ,EAAK,CAAEa,IAAKL,IAJxB,OAIXJ,EAJW,OAKfC,QAAQC,IAAIF,GACRA,EAAKU,QACPrB,EAAcD,EAAa,GAG3BuB,MAAM,6BAVO,2CAAH,sDAgBhB,OACE,yBAAKhB,UAAU,oBACb,yBAAKiB,GAAG,UAAUjB,UAAU,+BAC1B,kBAAC,IAAD,CAASV,aAAcA,EAAc4B,KAAMvB,EAAYH,eAAgBA,KAEzE,yBAAKQ,UAAU,aACb,wBAAIA,UAAU,wCAAd,+BACA,2BAAOA,UAAU,4BACf,+BACE,4BACE,iCACA,0CACA,yCACA,qCACA,yCACA,qCACA,6CAGJ,+BACGT,EAAY4B,KAAI,SAACD,EAAME,GACtB,OACE,wBAAIC,IAAKH,EAAKT,KACZ,wBAAIT,UAAU,gBAAgBoB,EAAI,GAClC,wBAAIpB,UAAU,gBAAgBkB,EAAKI,YACnC,wBAAItB,UAAU,gBAAgBkB,EAAKK,WACnC,wBAAIvB,UAAU,gBAAgBkB,EAAKM,OACnC,wBAAIxB,UAAU,gBAAgBkB,EAAKO,WACnC,wBAAIzB,UAAU,gBAAgBkB,EAAKQ,OACnC,wBAAI1B,UAAU,gBACZ,4BAAQ2B,QAAS,WACfrC,EAAa,+BACbM,EAAcsB,IACblB,UAAU,wBAHb,QAIA,4BAAQ2B,QAAS,WAAQnB,EAAWU,EAAKT,MAAQT,UAAU,uBAA3D,mB,oGCsCL4B,IA9Gf,SAAiBzC,GAAQ,IAAD,IAEcC,mBAAS,GAFvB,mBAEfK,EAFe,KAEHC,EAFG,KAGhBwB,EAAO/B,EAAM+B,KA4CjB,OA1CArB,qBAAU,WACNC,SAASC,eAAe,YAAY8B,UAAY,GAChD,IAAI5B,EAAMC,IAAS,QACnBC,YAASF,GACJG,MAAK,SAAAC,GACFC,QAAQC,IAAI,eAAgBF,GAC5BlB,EAAMK,eAAea,QAE9B,CAACZ,IAmCA,yBAAKO,UAAU,4BACX,yBAAKA,UAAU,0DACX,0BAAMA,UAAU,wBAAwB8B,SAnCnC,SAACC,GACdA,EAAMC,iBACWD,EAAME,OAAOC,SACa,KAAvCH,EAAME,OAAOC,SAASC,MAAMC,QAAoD,MAAnCL,EAAME,OAAOC,SAASC,MAAM,KACzEJ,EAAME,OAAOC,SAASC,MAAQJ,EAAME,OAAOC,SAASC,MAAME,UAAU,IAExE,IAAIC,EAAW,CACXrB,GAAIC,EAAKT,IACTa,WAAYS,EAAME,OAAOX,WAAWa,MACpCZ,UAAWQ,EAAME,OAAOV,UAAUY,MAClCX,MAAOO,EAAME,OAAOM,SAASJ,MAC7BV,UAAWM,EAAME,OAAOO,QAAQL,MAChCT,MAAOK,EAAME,OAAOC,SAASC,OAGjCtB,YAAUX,IAAS,aAAcoC,GAC5BlC,MAAK,SAAAC,GACoB,GAAlBA,EAAKoC,WAEL/C,EAAcD,EAAa,GAC3BN,EAAMG,aAAa,YAInBgB,QAAQC,IAAI,eAAgBF,EAAKU,SAEjCjB,SAASC,eAAe,YAAY8B,UAAY,UAAYxB,EAAKU,cAWjE,yBAAKf,UAAU,YACX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,cAAjB,iBAEJ,yBAAKA,UAAU,SACX,2BAAOiB,GAAG,aAAayB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,aAAaC,aAAc1B,EAAKI,eAGhH,yBAAKtB,UAAU,YACX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,cAAjB,eAEJ,yBAAKA,UAAU,SACX,2BAAOiB,GAAG,YAAYyB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,YAAYC,aAAc1B,EAAKK,cAG9G,yBAAKvB,UAAU,YACX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,cAAjB,WAEJ,yBAAKA,UAAU,SACX,2BAAOiB,GAAG,WAAWyB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,QAAQC,aAAc1B,EAAKM,UAGzG,yBAAKxB,UAAU,YACX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,cAAjB,WAEJ,yBAAKA,UAAU,SACX,4BAAQA,UAAU,eAAeiB,GAAG,WAChC,4BAAQkB,MAAOjB,EAAKO,WAAYP,EAAKO,WACrC,4BAAQU,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAGR,yBAAKnC,UAAU,SACX,8BAAOiB,GAAG,UAAUyB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,gBAArE,mBAAuF,YAAvF,6BAAgHzB,EAAKQ,OAArH,MAGR,yBAAK1B,UAAU,gBACX,4BAAQA,UAAU,uBAAuB2B,QAAS,WAAQxC,EAAMG,aAAa,YAA7E,SACA,4BAAQU,UAAU,gBAAlB,UACA,yBAAKA,UAAU,aACX,yBAAKiB,GAAG,WAAWjB,UAAU,4B,qMClG5CE,EAFC,mDAGDC,EAAQ,uCAAG,WAAO0C,GAAP,iBAAAnC,EAAA,sEACHoC,MAAMD,GADH,cAChBE,EADgB,gBAEHA,EAAKC,OAFF,cAEhB3C,EAFgB,yBAIbA,GAJa,2CAAH,sDAORQ,EAAS,uCAAG,WAAOgC,EAAMI,GAAb,iBAAAvC,EAAA,sEACJoC,MAAMD,EAAM,CACzBK,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACL,eAAgB,sBALH,cACjBP,EADiB,gBAQJA,EAAKC,OARD,cAQjB3C,EARiB,OASrBC,QAAQC,IAAI,eAAgBF,GATP,kBAUdA,GAVc,2CAAH,yD,wCCXtBkD,EAAOC,QAAU,IAA0B,kC,wJCiG5BC,MA5Ff,SAAoBtE,GAElB,IAAIuE,EAAUC,cAiCd,OACE,yBAAK3D,UAAU,qBACb,wBAAIA,UAAU,oBAAd,wBACA,yBAAKA,UAAU,WACb,0BAAMA,UAAU,WAAW8B,SApClB,SAACC,GACdA,EAAMC,iBACN,IAAI4B,EAAa7B,EAAME,OAAOC,SACE,KAA5B0B,EAAWzB,MAAMC,QAAyC,MAAxBwB,EAAWzB,MAAM,KACrDyB,EAAaA,EAAWzB,MAAME,UAAU,IAE1C,IAAIC,EAAW,CACbhB,WAAYS,EAAME,OAAOX,WAAWa,MACpCZ,UAAWQ,EAAME,OAAOV,UAAUY,MAClCX,MAAOO,EAAME,OAAOM,SAASJ,MAC7BV,UAAWM,EAAME,OAAOO,QAAQL,MAChCT,MAAOkC,GAIL3D,EAAMC,IAAS,YACnBW,YAAUZ,EAAKqC,GACZlC,MAAK,SAAAC,GAEAA,EAAKU,SACPT,QAAQC,IAAI,eAAgBF,EAAKU,SACjCC,MAAMX,EAAKU,WAGXT,QAAQC,IAAI,OAAQF,GACpBqD,EAAQG,KAAK,oBAYb,yBAAK7D,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,iBAEF,yBAAKA,UAAU,SACb,2BAAOiB,GAAG,aAAayB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,iBAG5E,yBAAK3C,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,eAEF,yBAAKA,UAAU,SACb,2BAAOiB,GAAG,YAAYyB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,gBAG3E,yBAAK3C,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,WAEF,yBAAKA,UAAU,SACb,2BAAOiB,GAAG,WAAWyB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,YAG1E,yBAAK3C,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,WAEF,yBAAKA,UAAU,SACb,4BAAQA,UAAU,eAAeiB,GAAG,WAClC,4BAAQkB,MAAM,IAAd,aACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAGJ,yBAAKnC,UAAU,SACb,uCAAOiB,GAAG,UAAUyB,KAAK,OAAO1C,UAAU,eAAe2C,YAAY,gBAArE,KAAuF,eAG3F,yBAAK3C,UAAU,qDACb,4BAAQA,UAAU,6BAAlB,OACA,kBAAC,IAAD,CAAM8D,GAAI,aAAc9D,UAAU,qBAAlC,sB,eCnEG+D,MAnBf,SAAuB5E,GAAQ,IAAD,EACFC,mBAAS,IADP,mBACrB4E,EADqB,KACdC,EADc,KAW1B,OARApE,qBAAU,WACN,IAAII,EAAMC,IAAS,sBACnBC,YAASF,GACJG,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAK6D,YACjBD,EAAS5D,EAAK6D,iBAEvB,IAEC,yBAAKlE,UAAU,iBACX,yBAAKA,UAAU,gEAAf,yBAAqG,0BAAMA,UAAU,gBAAgBgE,MCDlIG,MAZf,SAAahF,GACT,OACI,yBAAKa,UAAU,8DACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAM8D,GAAI,IAAK9D,UAAU,wBAAzB,gBACA,kBAAC,IAAD,CAAM8D,GAAI,aAAc9D,UAAU,wBAAlC,kBACA,kBAAC,IAAD,CAAM8D,GAAI,UAAW9D,UAAU,wBAA/B,qBCiBDoE,MAjBf,SAAqBjF,GACjB,OACI,yBAAMa,UAAU,SAEZ,kBAAC,IAAD,KACI,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOqE,OAAK,EAACC,KAAM,IAAKC,UAAWd,IACnC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAM,aAAcC,UAAWrF,MAC5C,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAM,UAAWC,UAAWR,OCL1CS,MARf,WACE,OACE,yBAAKxE,UAAU,OACd,kBAAC,EAAD,QCIeyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlF,SAASC,eAAe,SDyHpB,kBAAmBkF,WACrBA,UAAUC,cAAcC,MACrB/E,MAAK,SAAAgF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMxE,c","file":"static/js/main.c65dfa1e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doApiGet, apiUrl, doApiPost } from '../services/apiService';\r\nimport DarkBox from './darkBox';\r\nimport \"../css_comps/contacts.css\";\r\n\r\nfunction ContactsList(props) {\r\n  let [darkState, setDarkState] = useState(\"d-none\");\r\n  let [contacts_ar, setContactsArr] = useState([]);\r\n  let [counterApi, setCounterApi] = useState(0);\r\n  let [singleItem, setSingleItem] = useState({});\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"id_dark\").className = darkState;\r\n\r\n  }, [darkState])\r\n\r\n  useEffect(() => {\r\n    let url = apiUrl + \"users\"\r\n    doApiGet(url)\r\n      .then(data => {\r\n        console.log(\"contactsList\", data);\r\n        setContactsArr(data);\r\n      })\r\n  }, [counterApi])\r\n\r\n  const delcontact = async (_id) => {\r\n    let userChoose = global.confirm(\"Are you sure you want to delete?\");\r\n    if (userChoose) {\r\n      let url = apiUrl + \"users/del\";\r\n      let data = await doApiPost(url, { del: _id });\r\n      console.log(data);\r\n      if (data.message) {\r\n        setCounterApi(counterApi + 1)\r\n      }\r\n      else {\r\n        alert(\"error something not work!\")\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid \">\r\n      <div id=\"id_dark\" className=\"dark container-fluid center\">\r\n        <DarkBox setDarkState={setDarkState} item={singleItem} setContactsArr={setContactsArr} />\r\n      </div>\r\n      <div className=\"container\">\r\n        <h2 className=\"text-center mt-4 display-4 text-info\">Contacts list in the system</h2>\r\n        <table className=\"table table-striped mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Area Code</th>\r\n              <th>Phone</th>\r\n              <th>Edit/delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts_ar.map((item, i) => {\r\n              return (\r\n                <tr key={item._id}  >\r\n                  <td className=\"align-middle\">{i + 1}</td>\r\n                  <td className=\"align-middle\">{item.first_name}</td>\r\n                  <td className=\"align-middle\">{item.last_name}</td>\r\n                  <td className=\"align-middle\">{item.email}</td>\r\n                  <td className=\"align-middle\">{item.area_code}</td>\r\n                  <td className=\"align-middle\">{item.phone}</td>\r\n                  <td className=\"align-middle\">\r\n                    <button onClick={() => {\r\n                      setDarkState(\"dark container-fluid center\")\r\n                      setSingleItem(item)\r\n                    }} className=\"btn btn-warning mr-2\">Edit</button>\r\n                    <button onClick={() => { delcontact(item._id) }} className=\"btn btn-danger mr-2\">Del</button>\r\n\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ContactsList","import React, { useEffect, useState } from 'react';\r\nimport \"../css_comps/contacts.css\"\r\nimport { apiUrl, doApiPost, doApiGet } from '../services/apiService';\r\nfunction DarkBox(props) {\r\n\r\n    let [counterApi, setCounterApi] = useState(0);\r\n    let item = props.item;\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"id_error\").innerHTML = \"\"\r\n        let url = apiUrl + \"users\"\r\n        doApiGet(url)\r\n            .then(data => {\r\n                console.log(\"contactsList\", data);\r\n                props.setContactsArr(data)\r\n            })\r\n    }, [counterApi])\r\n\r\n    const sendForm = (event) => {\r\n        event.preventDefault();\r\n        let phoneInput = event.target.id_phone;\r\n        if (event.target.id_phone.value.length === 10 && event.target.id_phone.value[0] === \"0\") {\r\n            event.target.id_phone.value = event.target.id_phone.value.substring(1);\r\n        }\r\n        let bodyData = {\r\n            id: item._id,\r\n            first_name: event.target.first_name.value,\r\n            last_name: event.target.last_name.value,\r\n            email: event.target.id_email.value,\r\n            area_code: event.target.id_code.value,\r\n            phone: event.target.id_phone.value,\r\n        }\r\n\r\n        doApiPost(apiUrl + \"users/edit\", bodyData)\r\n            .then(data => {\r\n                if (data.nModified == 1) {\r\n                    // alert(\"user info is being update\")\r\n                    setCounterApi(counterApi + 1);\r\n                    props.setDarkState(\"d-none\");\r\n                }\r\n\r\n                else {\r\n                    console.log(\"data.message\", data.message);\r\n                    // alert(data.message);\r\n                    document.getElementById(\"id_error\").innerHTML = \"Error: \" + data.message;\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"dark_inside text-center \">\r\n            <div className=\"d-flex justify-content-center align-items-center py-3 \">\r\n                <form className=\"col text-center mt-1 \" onSubmit={sendForm}>\r\n\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-3\">\r\n                            <label className=\"float-left\">First Name: </label>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input id=\"first_name\" type=\"text\" className=\"form-control\" placeholder=\"First Name\" defaultValue={item.first_name} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-3\">\r\n                            <label className=\"float-left\">Last Name:</label>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input id=\"last_name\" type=\"text\" className=\"form-control\" placeholder=\"Last Name\" defaultValue={item.last_name} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-3\">\r\n                            <label className=\"float-left\">Email:</label>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input id=\"id_email\" type=\"text\" className=\"form-control\" placeholder=\"Email\" defaultValue={item.email} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-3\">\r\n                            <label className=\"float-left\">Phone:</label>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <select className=\"form-control\" id=\"id_code\" >\r\n                                <option value={item.area_code}>{item.area_code}</option>\r\n                                <option value=\"+972\">+972</option>\r\n                                <option value=\"+39\">+39</option>\r\n                                <option value=\"+1\">+1</option>\r\n                                <option value=\"+595\">+595</option>\r\n                                <option value=\"+678\">+678</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input id=\"id_pass\" type=\"text\" className=\"form-control\" placeholder=\"Phone number\" id=\"id_phone\" defaultValue={item.phone} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" text-center\">\r\n                        <button className=\"btn btn-danger mr-3 \" onClick={() => { props.setDarkState(\"d-none\") }}>Close</button>\r\n                        <button className=\"btn btn-info\" >Update</button>\r\n                        <div className=\"text-left\">\r\n                            <div id=\"id_error\" className=\"text-danger mt-2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DarkBox","let localUrl = \"http://localhost:3000/\";\r\nlet realUrl = \"https://ideodigital-contacts-task.herokuapp.com/\"\r\n\r\nexport const apiUrl = realUrl;\r\nexport const doApiGet = async (_url) => {\r\n    let resp = await fetch(_url);\r\n    let data = await resp.json();\r\n    //console.log(\"doApiGst\",data);\r\n    return data;\r\n}\r\n\r\nexport const doApiPost = async (_url, _body) => {\r\n    let resp = await fetch(_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(_body),\r\n        headers: {\r\n            'content-type': \"application/json\"\r\n        }\r\n    })\r\n    let data = await resp.json()\r\n    console.log(\"service say:\" ,data)\r\n    return data;\r\n}\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { doApiPost, apiUrl } from '../services/apiService';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../css_comps/contacts.css\"\r\nfunction NewContact(props) {\r\n\r\n  let history = useHistory();\r\n  let sendForm = (event) => {\r\n    event.preventDefault();\r\n    let phoneInput = event.target.id_phone;\r\n    if (phoneInput.value.length === 10 && phoneInput.value[0] === \"0\") {\r\n      phoneInput = phoneInput.value.substring(1);\r\n    }\r\n    let bodyData = {\r\n      first_name: event.target.first_name.value,\r\n      last_name: event.target.last_name.value,\r\n      email: event.target.id_email.value,\r\n      area_code: event.target.id_code.value,\r\n      phone: phoneInput,\r\n\r\n    }\r\n   \r\n    let url = apiUrl + \"users/add\"\r\n    doApiPost(url, bodyData)\r\n      .then(data => {\r\n        // console.log(\"doApiPost\", data);\r\n        if (data.message) {\r\n          console.log(\"data.message\", data.message);\r\n          alert(data.message);\r\n        }\r\n        else {\r\n          console.log(\"data\", data);\r\n          history.push(\"/contacts/\");\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container registr\">\r\n      <h1 className=\"mt-5 text-center\">Contact Registration</h1>\r\n      <div className=\"col new\">\r\n        <form className=\"col-lg-6\" onSubmit={sendForm}>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">First Name: </label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"first_name\" type=\"text\" className=\"form-control\" placeholder=\"First Name\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">Last Name:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"last_name\" type=\"text\" className=\"form-control\" placeholder=\"Last Name\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">Email:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"id_email\" type=\"text\" className=\"form-control\" placeholder=\"Email\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">Phone:</label>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <select className=\"form-control\" id=\"id_code\">\r\n                <option value=\"\">area code</option>\r\n                <option value=\"+972\">+972</option>\r\n                <option value=\"+39\">+39</option>\r\n                <option value=\"+1\">+1</option>\r\n                <option value=\"+595\">+595</option>\r\n                <option value=\"+678\">+678</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <input id=\"id_pass\" type=\"text\" className=\"form-control\" placeholder=\"Phone number\" id=\"id_phone\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <button className=\"btn btn-success mt-3 w-25\">Add</button>\r\n            <Link to={\"/contacts/\"} className=\"btn btn-info mt-3\">show contacts</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewContact","import React, { useState, useEffect } from 'react';\r\nimport { doApiGet, apiUrl } from '../services/apiService';\r\nimport \"../css_comps/contacts.css\";\r\nfunction TotalContacts(props) {\r\n    let [total, setTotal] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let url = apiUrl + \"users/countContacts\"\r\n        doApiGet(url)\r\n            .then(data => {\r\n                console.log(data.doucuments);\r\n                setTotal(data.doucuments)\r\n            })\r\n    }, [])\r\n    return (\r\n        <div className=\"container new\">\r\n            <div className=\"border border-info rounded bg-info text-white p-3 display-4 \" >count of contacts is: <span className=\"text-warning\">{total}</span></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TotalContacts","import React from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport \"../css_comps/contacts.css\"\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"container bg-secondary text-dark d-flex align-items-center\">\r\n            <div className=\"row\">\r\n                <Link to={\"/\"} className=\"text-decoration-none\">Registration</Link>\r\n                <Link to={\"/contacts/\"} className=\"text-decoration-none\">Contacts Table</Link>\r\n                <Link to={\"/total/\"} className=\"text-decoration-none\">Total contacts</Link>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react';\r\nimport NewContact from './newContact';\r\nimport ContactsList from './contactsList';\r\nimport TotalContacts from './totalContacts';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"../css_comps/contacts.css\";\r\n\r\nimport Nav from './nav';\r\n\r\nfunction AppContacts(props) {\r\n    return (\r\n        <div  className=\"backg\">\r\n\r\n            <Router>\r\n                <Nav />\r\n                {/* <Route exact path={\"/\",\"/contacts/\",\"/total/\"} component={Nav} /> */}\r\n                <Route exact path={\"/\"} component={NewContact} />\r\n                <Route exact path={\"/contacts/\"} component={ContactsList} />\r\n                <Route exact path={\"/total/\"} component={TotalContacts} />\r\n                \r\n            </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppContacts\r\n\r\n\r\n\r\n {/* <Switch>\r\n\r\n                    <Route exact path={[\"/\", \"/contacts/\", \"/total/\"]} render={() => {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Nav />\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                    } />\r\n\r\n                    <Route exact path={\"/\", \"/contacts/\", \"/total/\"} component={Nav} />\r\n                    <Route exact path={\"/\"} component={NewContact} />\r\n                    <Route exact path={\"/contacts/\"} component={ContactsList} />\r\n                    <Route exact path={\"/total/\"} component={TotalContacts} />\r\n\r\n                </Switch> */}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppContacts from './contacts_comps/appCotacts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <AppContacts/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}